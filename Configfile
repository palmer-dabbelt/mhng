##############################################################################
# Global Build Options                                                       #
##############################################################################
# I'm going to mandate c++11 support for this code because it makes
# life a whole bunch easier for me to develop with.
LANGUAGES   += c++
COMPILEOPTS += -Wall
COMPILEOPTS += -Werror
COMPILEOPTS += -Wextra
COMPILEOPTS += -std=c++11
COMPILEOPTS += -pedantic

# One of the downsides of C++ is that it appears to define a public
# interface for libraries.  This header compiler simply copies headers
# over.
LANGUAGES   += h

# Some commands are actually just scripts.
LANGUAGES   += bash

# The best way I've found for building internal C++ library
# dependencies is to just let everything staticly link.
LANGUAGES   += c++
COMPILEOPTS += -Isrc

# This is my global library list.  I'm putting pretty much everything
# here because there's a bunch of binaries below and I don't want to
# add every external dependency to every binary.
LANGUAGES   += c++
COMPILEOPTS += `ppkg-config sqlite3 --cflags`
LINKOPTS    += `ppkg-config sqlite3 --libs`
COMPILEOPTS += `ppkg-config gnutls --cflags`
LINKOPTS    += `ppkg-config gnutls --libs`
LINKOPTS    += -lgnutlsxx
COMPILEOPTS += `ppkg-config gitdate++ --cflags`
LINKOPTS    += `ppkg-config gitdate++ --libs`
COMPILEOPTS += `ppkg-config uuid --cflags`
LINKOPTS    += `ppkg-config uuid --libs`
COMPILEOPTS += `ppkg-config ncurses --cflags`
LINKOPTS    += `ppkg-config ncurses --libs`

##############################################################################
# Libraries                                                                  #
##############################################################################
# The MHNG IMAP client library, which is split out in the hope that it
# can be used by other applications.
LIBRARIES   += libmhimap.so
CONFIG      += libmhimap_sources
CONFIG      += libmhimap_headers

# Common routines shared by all MHNG programs, provided so external
# code has essentially the same access as internal code does.
LIBRARIES   += libmh.so
CONFIG      += libmh_sources
CONFIG      += libmh_headers

# The new MH library, which aims to replace the two libraries above.
LIBRARIES   += libmhng.so
CONFIG      += libmhng_sources
CONFIG      += libmhng_headers

##############################################################################
# Local-Access Binaries                                                      #
##############################################################################
# Composes a reply to a message, using your editor of choice (hint:
# it's emacs :)).
BINARIES    += repl
SOURCES     += repl.c++
COMPILEOPTS += -DREPL

# Composes a message
BINARIES    += comp
SOURCES     += repl.c++
COMPILEOPTS += -DCOMP

# Forwards a message
BINARIES    += forw
SOURCES     += repl.c++
COMPILEOPTS += -DFORW

# Re-packs messages into folders.  This modifies the sequence numbers
# such that the messages all stay in order but no longer have any
# gaps.
BINARIES    += mh-pack
SOURCES     += mh-pack.c++

##############################################################################
# Remote-Access Binaries                                                     #
##############################################################################
# Watches an GMail account for changes, ensuring that the local .mhdir
# is always kept up-to-date with the contents of the server.
BINARIES    += mh-gmail-watch
SOURCES     += mh-gmail-watch.c++
COMPILEOPTS += -DWATCH

# Fetches changes from a GMail account, just like "-watch" but doesn't
# issue an IDLE command.
BINARIES    += mh-gmail-fetch
SOURCES     += mh-gmail-watch.c++
COMPILEOPTS += -DFETCH

# Things that use libmhng
##############################################################################
# Local-Access Binaries                                                      #
##############################################################################
# Lists the messages in the given folder, defaulting to the currently
# selected folder.
BINARIES    += mhng-scan
SOURCES     += mhng-scan.c++

# Writes some (or by default, many) messages out to SMTP and then
# removes them.
BINARIES    += mhng-post
SOURCES     += mhng-post.c++

# Removes the current message.
BINARIES    += mhng-rmm
SOURCES     += mhng-rmm.c++

# Shows the current message (or a passed in message), optionally
# moving to the next/previous message in the list.
BINARIES    += mhng-show
SOURCES     += mhng-show.c++
COMPILEOPTS += -DSHOW

BINARIES    += mhng-next
SOURCES     += mhng-show.c++
COMPILEOPTS += -DNEXT

BINARIES    += mhng-prev
SOURCES     += mhng-show.c++
COMPILEOPTS += -DPREV

# This one is really just a mhng-rmm && mhng-{next,prev}, but it's all
# put in a single binary for ease of use.
BINARIES    += mhng-mtn
SOURCES     += mhng-show.c++
COMPILEOPTS += -DNEXT
COMPILEOPTS += -DRMM

BINARIES    += mhng-mtp
SOURCES     += mhng-show.c++
COMPILEOPTS += -DPREV
COMPILEOPTS += -DRMM

# Lists the MIME parts of a given message
BINARIES    += mhng-mime
SOURCES     += mhng-mime.c++

# Lists every folder known to the system
BINARIES    += mhng-folders
SOURCES     += mhng-folders.c++

# Lists all the URLs found in a message
BINARIES    += mhng-urls
SOURCES     += mhng-urls.c++

# An installation helper script
BINARIES    += mhng-install
SOURCES     += mhng-install.bash
